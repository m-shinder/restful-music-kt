# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
permissions:
  contents: read
  packages: write

jobs:
  build_and_dockerize:
    ### Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    - uses: actions/upload-artifact@v3
      with:
        name: Plain-Package
        path: build/libs/*-plain.jar
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: |
          build/libs/*.jar
          !build/libs/*-plain.jar
    ### Dockerize
    - name: Extract version
      run: echo "PACKAGE_VERSION=`gradle properties | grep '^version:' | cut -d' ' -f2`" >> "$GITHUB_ENV"
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ 'ghcr.io' }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ 'ghcr.io' }}/${{ github.repository }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        build-args: 'version=${{ env.PACKAGE_VERSION }}'
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
